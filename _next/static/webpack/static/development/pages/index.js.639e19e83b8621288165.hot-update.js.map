{"version":3,"file":"static/webpack/static/development/pages/index.js.639e19e83b8621288165.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react'\nimport styled, { css } from 'styled-components'\nimport tw from 'tailwind.macro'\nimport theme from 'tailwindcss/defaultTheme'\nimport { Parallax } from 'react-spring/addons.cjs'\nimport Hero from '../components/Hero'\nimport Container from '../components/Container'\nimport Inner from '../elements/Inner'\nimport { UpDown } from '../styles/animations'\nimport { DividerMiddle } from '../elements/Dividers'\n\nconst { screens } = theme\n\nconst screenMd = screens.md\n\nconst H1Styles = css`\n  ${tw`text-center text-white font-serif`};\n  ${tw`text-4xl md:text-6xl`};\n  text-shadow: -3px -3px 0 rgba(0, 0, 0, 0.02), 3px -3px 0 rgba(0, 0, 0, 0.02), -3px 3px 0 rgba(0, 0, 0, 0.02),\n    3px 3px 0 rgba(0, 0, 0, 0.02);\n`\n\nconst H1 = styled.h1`\n  ${H1Styles};\n`\n\nconst Text = styled.p`\n  ${tw`md:text-left text-gray-300 font-sans tracking-wide leading-relaxed`};\n  ${tw`text-lg md:text-2xl`};\n  ${props => props.center && tw`text-center md:text-center`}\n`\n\nconst WrapBlock = tw.span`block md:inline-block`\n\nconst Char = styled(UpDown)``\n\nconst Links = tw.div`md:flex md:items-center md:justify-center md:justify-start`\n\nconst Link = styled.a`\n  ${tw`block md:inline-block md:text-left text-white font-sans font-semibold`};\n  ${tw`text-lg md:text-2xl`};\n  ${tw`hover:text-black`};\n\n  @media only screen and (min-width: ${screenMd}) {\n    &:not(:last-child)::after {\n      content: '';\n      margin-left: 20px;\n      margin-right: 20px;\n    }\n  }\n`\n\nconst animatedText = (text, drop) =>\n  text.split('').map((c, index) => (\n    <Char key={`char-${c}-${index}`} drop={drop} duration={5 + Math.random() * 10} delay={100 * Math.random() * 15}>\n      {c}\n    </Char>\n  ))\n\nfunction Index() {\n  return (\n    <Parallax pages={2}>\n      <Hero offset={0}>\n        <Inner>\n          <H1>\n            <WrapBlock>{animatedText('ANDREI', true)}</WrapBlock> <WrapBlock>{animatedText('POPA', true)}</WrapBlock>\n          </H1>\n          <Text center style={{ marginBottom: 100 }}>\n            Front-end Developer â€¢ London\n          </Text>\n        </Inner>\n      </Hero>\n      <DividerMiddle\n        bg=\"linear-gradient(90deg, rgb(111, 34, 83),rgb(253, 64, 149))\"\n        speed={0.1}\n        offset={0.6}\n        factor={2}\n        clipPath=\"polygon(0 15%, 100% 5%, 100% 35%, 0 95%);\"\n      />\n      <DividerMiddle\n        bg=\"linear-gradient(90deg, rgb(252, 108, 53),rgb(170, 18, 159))\"\n        speed={0.2}\n        offset={0.7}\n        factor={2}\n      />\n      <Container offset={1} speed={0}>\n        <Inner>\n          <Text>\n            Hi,\n            <br />\n            <br />\n            I'm Andrei, a self-taught front-end developer with over 10 years experience in the media/advertising\n            industry, never afraid of exploring new technologies and keen to solve challenging problems every day.\n          </Text>\n\n          <Text>Get in touch!</Text>\n\n          <Links>\n            <Link href=\"https://twitter.com/deioo\" target=\"_blank\">\n              {animatedText('@deioo')}\n            </Link>\n            <Link href=\"mailto:therealdeioo@gmail.com\">{animatedText('therealdeioo@gmail.com')}</Link>\n          </Links>\n        </Inner>\n      </Container>\n    </Parallax>\n  )\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA;AACA;AAUA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}